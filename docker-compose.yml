version: '3.8'

services:
  db:
    image: postgres:15.2
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  backend:
    build: ./backend
    command: sh -c "pdm run python manage.py migrate && pdm run python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend/user:/app/user
      - ./backend/ticker:/app/ticker
      - ./backend/peridash:/app/peridash
      - ./backend/pyproject.toml:/app/pyproject.toml
      - ./backend/pdm.lock:/app/pdm.lock
      - ./backend/coverage:/app/htmlcov
    ports:
      - "8000:8000"
    depends_on:
      - db
      - memcached
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_HOSTNAME
      - POSTGRES_PORT
      - TWELVE_DATA_API_KEY
      - CACHE_HOSTNAME
      - CACHE_PORT
  memcached:
    image: memcached:1.6.19-bullseye
    command: memcached -m 128

  frontend:
    build: ./frontend
    command: npm run dev
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/package.json:/app/package.json
      - ./frontend/package-lock.json:/app/package-lock.json
      - ./frontend/coverage:/app/coverage
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_BACKEND_URL
  nginx:
    build: ./nginx

    environment:
      - SERVER_NAME=localhost
      - FRONTEND_URL=frontend:3000
      - BACKEND_URL=backend:8000
    ports:
      - "80:80"
      - "443:443"
    
volumes:
  postgres_data:
