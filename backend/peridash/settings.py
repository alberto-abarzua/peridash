"""
Django settings for peridash project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("BACKEND_DJANGO_SECRET_KEY", "secret")

# SECURITY WARNING: don't run with debug turned on in production.
DEBUG = os.environ.get("BACKEND_DJANGO_DEUBG", "False").upper() == "TRUE"

if os.environ.get("GLOBAL_RUN_ENV", "prod") == "prod":
    DEBUG = False

ALLOWED_HOSTS = os.environ.get("BACKEND_DJANGO_ALLOWED_HOSTS", "*").split(",")

CORS_ALLOW_ALL_ORIGINS = DEBUG

if not CORS_ALLOW_ALL_ORIGINS:
    cors_origin_whitelist = os.environ.get("BACKEND_DJANGO_CORS_WHITELIST", None)
    if cors_origin_whitelist is not None and cors_origin_whitelist != "":
        CORS_ALLOWED_ORIGINS = cors_origin_whitelist.split(",")

# Application definition
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "corsheaders",
    "rest_framework.authtoken",
    "user",
    "ticker",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "peridash.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "peridash.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases


DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": os.environ.get("BACKEND_POSTGRES_DB"),
        "USER": os.environ.get("BACKEND_POSTGRES_USER"),
        "PASSWORD": os.environ.get("BACKEND_POSTGRES_PASSWORD"),
        "HOST": os.environ.get("BACKEND_POSTGRES_HOSTNAME"),
        "PORT": int(os.environ.get("BACKEND_POSTGRES_PORT")),
        "TEST": {
            "NAME": "mytestdatabase",
        },
    }
}

cache_hostname = os.environ.get("BACKEND_CACHE_HOSTNAME", None)
cache_port = os.environ.get("BACKEND_CACHE_PORT", None)


CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.memcached.PyMemcacheCache",
        "LOCATION": f"{cache_hostname}:{cache_port}",
        "TIMEOUT": None,
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

APPEND_SLASH = False

REST_FRAMEWORK = {
    "URL_FORMAT_OVERRIDE": None,
    "APPEND_SLASH": False,
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.TokenAuthentication",
    ],
}

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"

STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

AUTH_USER_MODEL = "user.User"
