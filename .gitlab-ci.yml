image: docker:latest

services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"

stages:
  - build
  - lint_backend
  - lint_frontend
  - test_backend
  - test_frontend
  - build_and_push

build:
  stage: build
  environment:
    name: dev
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker compose build
  cache:
    paths:
      - ./docker

lint_backend:
  stage: lint_backend
  environment:
    name: dev
  script:
    - docker-compose run --rm backend pdm run lint

lint_frontend:
  stage: lint_frontend
  environment:
    name: dev
  script:
    - docker-compose run --rm frontend npm lint_no_fix

test_backend:
  stage: test_backend
  environment:
    name: dev
  script:
    - docker compose run --rm backend pdm run test


test_frontend:
  stage: test_frontend
  environment:
    name: dev
  script:
    - docker compose run --rm frontend npm run test_no_watch

# upload to docker hub

frontend:
  stage: build_and_push
  environment:
    name: dev
  script:
    - docker login --username $DOCKER_HUB_USER --password $DOCKER_HUB_PASSWORD
    - docker build -t $DOCKER_HUB_USER/dev-peridash-frontend:latest ./frontend
    - docker push $DOCKER_HUB_USER/dev-peridash-frontend:latest
  only:
    - main

backend:
  stage: build_and_push
  environment:
    name: dev
  script:
    - docker login --username $DOCKER_HUB_USER --password $DOCKER_HUB_PASSWORD
    - docker build -t $DOCKER_HUB_USER/dev-peridash-backend:latest ./backend
    - docker push $DOCKER_HUB_USER/dev-peridash-backend:latest
  only:
    - main

nginx:
  stage: build_and_push
  environment:
    name: dev
  script:
    - docker login --username $DOCKER_HUB_USER --password $DOCKER_HUB_PASSWORD
    - docker build -t $DOCKER_HUB_USER/dev-peridash-nginx:latest ./nginx
    - docker push $DOCKER_HUB_USER/dev-peridash-nginx:latest
  only:
    - main

